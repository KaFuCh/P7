<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const int N = 10;
const int M = 7;
chan transport[N], work[M];

clock global_c;

typedef int[0, 15] wid_t;
typedef int[0, 15] id_t;

meta int remaining = 0;
meta int heur = 0;</declaration><template><name x="5" y="5">Module</name><parameter>id_t id, wid_t wid, int p_time, int t_time, int cost_rate, id_t&amp; next[4], int length</parameter><declaration>clock local_c;

bool is_callable(id_t cid){
   int i;
   for(i=0; i&lt;length;++i){
        if(next[i] == cid){
            return true;
        }
    }
   return false;
}</declaration><location id="id0" x="632" y="-24"><name x="622" y="-54">Done</name></location><location id="id1" x="632" y="248"><name x="600" y="264">Processing</name><label kind="invariant" x="600" y="280">local_c &lt;= p_time &amp;&amp;
cost' == cost_rate</label></location><location id="id2" x="168" y="248"><name x="120" y="264">Transporting</name><label kind="invariant" x="120" y="280">local_c &lt;= t_time</label></location><location id="id3" x="168" y="-24"><name x="158" y="-54">Idle</name></location><init ref="id3"/><transition><source ref="id2"/><target ref="id3"/><label kind="select" x="288" y="72">e: id_t</label><label kind="guard" x="288" y="88">is_callable(e) &amp;&amp;
local_c == t_time</label><label kind="synchronisation" x="288" y="112">transport[e]!</label><nail x="272" y="104"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="304" y="256">local_c == t_time</label><label kind="assignment" x="304" y="272">local_c = 0</label></transition><transition><source ref="id0"/><target ref="id3"/><label kind="select" x="340" y="-69">e: id_t</label><label kind="guard" x="340" y="-54">is_callable(e)</label><label kind="synchronisation" x="340" y="-39">transport[e]!</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="640" y="80">local_c &lt;= p_time</label><label kind="synchronisation" x="640" y="95">work[wid]!</label><label kind="assignment" x="640" y="112">remaining -= cost_rate * p_time</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-72" y="80">transport[id]?</label><label kind="assignment" x="-72" y="96">local_c = 0,
remaining += cost_rate * p_time</label></transition></template><template><name>Recipe</name><parameter>wid_t&amp; dependencies[16][16], wid_t&amp; lengths[16], wid_t layers</parameter><declaration>bool done = false;

int power2(int n){
    int result = 1;
    int i = 0;
    while(i &lt; n)
    {
        result = 2 * result;
        i = i + 1;
    }
    return result;
}

int[16] current = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

bool is_callable(wid_t wid){
    int i, j;
    for(i = 0; i &lt; layers;++i){
        if(current[i] != power2(lenghts[i] - 1)){
            for(j = 0; j &lt; lengths[i]; j++){;
                bool unworked = (power2(j) &amp; current[i]) == 0;
                if(unworked &amp;&amp; dependencies[i][j] == wid) {
                    current[i] = current[i] | power2(j);
		    return true;
                }
            }
        }
	else if(current[i] == power2(lenghts[i]) - 1) {
            continue;
        }
	else {
	     return false;
	}
    }
}</declaration><location id="id4" x="-64" y="72"></location><location id="id5" x="-64" y="-96"></location><location id="id6" x="-64" y="-232"></location><init ref="id6"/><transition><source ref="id5"/><target ref="id5"/><label kind="select" x="72" y="-184">e: wid_t</label><label kind="guard" x="72" y="-168">is_callable(e)</label><label kind="synchronisation" x="72" y="-152">work[e]?</label><nail x="32" y="-168"/><nail x="112" y="-96"/><nail x="40" y="-24"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-160" y="-32">transport[0]!</label><label kind="assignment" x="-152" y="-48">done = true</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-160" y="-176">transport[0]!</label></transition></template><system>
// int id, int wid, int p_time, int t_time, int cost_rate, int&amp; next[4], int length
int a0[4] = {-1, -1, -1, -1};
mod0 = Module(0, 1, 5, 5, 5, a0, 0);

system mod0;</system></nta>